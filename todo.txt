todo.txt for android.calendar.ics.adapter
=========

20141215
    ics file gets lastmodifieddate of event.startDate.
    removed "(null)" form empty fields

update documentation:

to use with a local only calendar
https://f-droid.org/wiki/page/org.sufficientlysecure.localcalendar

and ics-files with only one event (or only a few)

Release note:

* bugfixes
 * [#6 todo](https://github.com/k3b/CalendarIcsAdapter/issues/6) 
* imporvements
 * [#6 todo](https://github.com/k3b/CalendarIcsAdapter/issues/6) 
* todo (open issues from github)

#10  Import multiple entries enhancement
#8 add enhenced import support for acalendar enhancement
#7 export: dialog with export settings enhancement 

just released  "de.k3b.android.calendar.ics.adapter" version bump to V1.5.6.13-141016

rowBinder
	unittests for completeness
		all but alarms
	make colids private
	public col-count => verify compatibility with acal-event-content provider
	
v #5 Seperate android2 api from android4 api  


v #11 Add Support for RDate
v #9 Add Support to import/export alarm-reminders
- #8 acalendar properties transfer alarms
	// douplicate mode
	Long calendar_id = 1
	String title = Shermeier
	Integer availabilityStatus = 0
	Boolean allDay = false
	Integer visibility = 0

                    // nur bei edit
                    Boolean editMode=true

v #6 bug export: recurring event:email-subject date should be occurence-start (long-extra-beginTime) instead of rule-start
	- is there a ical rRule to text function?
- #7 feature export: instead of 2 activities send ics/ical option dialog with format (ics/ical) and with recurrence event (only this event|all events|this and all further events)
	- dlg
	- engine convert eventrule

v push to f-droid-store
	v v1.5.1 wrong package name
	v v1.5.3 
	> v1.5.4.10 
		- waiting for deployment
v exportToIcs only for non-file
v sendTo with email-subject and content
	v intent-text/subject
	v format date
	v appVersion
v send via bluetooth workaround via public readable file
- receive bluetooth workaround
	v ask on stackoverflow

? main view with settings and about
	
----------------------
How to enable/disable intentet filter at runtime via activity-alias

http://developer.android.com/guide/topics/manifest/activity-alias-element.html

<activity-alias>

syntax:

    <activity-alias android:enabled=["true" | "false"]
                    android:exported=["true" | "false"]
                    android:icon="drawable resource"
                    android:label="string resource"
                    android:name="string"
                    android:permission="string"
                    android:targetActivity="string" >
        . . .
    </activity-alias>

contained in:
    <application>
can contain:
    <intent-filter>
    <meta-data>
description:
    An alias for an activity, named by the targetActivity attribute. The target must be in the same application as the alias and it must be declared before the alias in the manifest.

    The alias presents the target activity as a independent entity. It can have its own set of intent filters, and they, rather than the intent filters on the target activity itself, determine which intents can activate the target through the alias and how the system treats the alias. For example, the intent filters on the alias may specify the "android.intent.action.MAIN" and "android.intent.category.LAUNCHER" flags, causing it to be represented in the application launcher, even though none of the filters on the target activity itself set these flags.

    With the exception of targetActivity, <activity-alias> attributes are a subset of <activity> attributes. For attributes in the subset, none of the values set for the target carry over to the alias. However, for attributes not in the subset, the values set for the target activity also apply to the alias. 
attributes:

    android:enabled
        Whether or not the target activity can be instantiated by the system through this alias - "true" if it can be, and "false" if not. The default value is "true".

        The <application> element has its own enabled attribute that applies to all application components, including activity aliases. The <application> and <activity-alias> attributes must both be "true" for the system to be able to instantiate the target activity through the alias. If either is "false", the alias does not work. 
    android:exported
        Whether or not components of other applications can launch the target activity through this alias - "true" if they can, and "false" if not. If "false", the target activity can be launched through the alias only by components of the same application as the alias or applications with the same user ID.

        The default value depends on whether the alias contains intent filters. The absence of any filters means that the activity can be invoked through the alias only by specifying the exact name of the alias. This implies that the alias is intended only for application-internal use (since others would not know its name) - so the default value is "false". On the other hand, the presence of at least one filter implies that the alias is intended for external use - so the default value is "true".
    android:icon
        An icon for the target activity when presented to users through the alias. See the <activity> element's icon attribute for more information. 
    android:label
        A user-readable label for the alias when presented to users through the alias. See the <activity> element's label attribute for more information.

    android:name
        A unique name for the alias. The name should resemble a fully qualified class name. But, unlike the name of the target activity, the alias name is arbitrary; it does not refer to an actual class.

    android:permission
        The name of a permission that clients must have to launch the target activity or get it to do something via the alias. If a caller of startActivity() or startActivityForResult() has not been granted the specified permission, the target activity will not be activated.

        This attribute supplants any permission set for the target activity itself. If it is not set, a permission is not needed to activate the target through the alias.

        For more information on permissions, see the Permissions section in the introduction. 
    android:targetActivity
        The name of the activity that can be activated through the alias. This name must match the name attribute of an <activity> element that precedes the alias in the manifest.

introduced in:
    API Level 1
see also:
    <activity>

---------------------------------
recurrence transformation (this; all; this and all further)

C:\Users\eve\Downloads\Android\dbAndContent



